// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Performance.Entity
{
    public partial class PerformanceContext : DbContext
    {
        public PerformanceContext()
        {
        }

        public PerformanceContext(DbContextOptions<PerformanceContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Achievement> Achievements { get; set; }
        public virtual DbSet<IndexLibrary> IndexLibraries { get; set; }
        public virtual DbSet<Organization> Organizations { get; set; }
        public virtual DbSet<OrganizationIndex> OrganizationIndices { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Achievement>(entity =>
            {
                entity.Property(e => e.AchievementId).ValueGeneratedNever();

                entity.Property(e => e.ActualValue).HasComment("实际值");

                entity.Property(e => e.ChallengeValue).HasComment("挑战值");

                entity.Property(e => e.GuaranteedValue).HasComment("保障值");

                entity.Property(e => e.IndexLibraryId).HasComment("指标");

                entity.Property(e => e.OrganizationId).HasComment("机构/部门");

                entity.Property(e => e.TargetValue).HasComment("目标值");

                entity.Property(e => e.Year).HasComment("年份");

                entity.HasOne(d => d.IndexLibrary)
                    .WithMany(p => p.Achievements)
                    .HasForeignKey(d => d.IndexLibraryId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Achievement_IndexLibrary");

                entity.HasOne(d => d.Organization)
                    .WithMany(p => p.Achievements)
                    .HasForeignKey(d => d.OrganizationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Achievement_Organization");
            });

            modelBuilder.Entity<IndexLibrary>(entity =>
            {
                entity.Property(e => e.IndexLibraryId)
                    .ValueGeneratedNever()
                    .HasComment("指标");

                entity.Property(e => e.Definition).HasComment("指标定义");

                entity.Property(e => e.IsEnabled).HasComment("是否启用");

                entity.Property(e => e.Name).HasComment("指标名称");

                entity.Property(e => e.Remark).HasComment("备注");

                entity.Property(e => e.Scope).HasComment("指标范围");

                entity.Property(e => e.Type).HasComment("指标类别");

                entity.Property(e => e.Unit).HasComment("单位");
            });

            modelBuilder.Entity<Organization>(entity =>
            {
                entity.Property(e => e.OrganizationId)
                    .ValueGeneratedNever()
                    .HasComment("机构/部门");

                entity.Property(e => e.Address).HasComment("地址");

                entity.Property(e => e.Description).HasComment("描述");

                entity.Property(e => e.Name).HasComment("名称");

                entity.Property(e => e.ParentId).HasComment("父ID");

                entity.Property(e => e.Phone).HasComment("电话");

                entity.HasOne(d => d.Parent)
                    .WithMany(p => p.InverseParent)
                    .HasForeignKey(d => d.ParentId)
                    .HasConstraintName("FK_Organization_Organization");
            });

            modelBuilder.Entity<OrganizationIndex>(entity =>
            {
                entity.Property(e => e.OrganizationIndexId)
                    .ValueGeneratedNever()
                    .HasComment("部门绑定指标");

                entity.Property(e => e.IndexLibraryId).HasComment("指标");

                entity.Property(e => e.OrganizationId).HasComment("机构/部门");

                entity.HasOne(d => d.IndexLibrary)
                    .WithMany(p => p.OrganizationIndices)
                    .HasForeignKey(d => d.IndexLibraryId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OrganizationIndex_IndexLibrary");

                entity.HasOne(d => d.Organization)
                    .WithMany(p => p.OrganizationIndices)
                    .HasForeignKey(d => d.OrganizationId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_OrganizationIndex_Organization");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}